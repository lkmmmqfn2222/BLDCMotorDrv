ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "bldc.h"
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 2


  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c ****  
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** extern HALL hallTree;
  47:Src/stm32f4xx_it.c **** extern STATE stateContr;
  48:Src/stm32f4xx_it.c **** extern PIDREG_T piSpd;
  49:Src/stm32f4xx_it.c **** extern PIDREG_T piICurr;
  50:Src/stm32f4xx_it.c **** extern ADCSamp ADCSampPare;
  51:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  64:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  65:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  66:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  69:Src/stm32f4xx_it.c **** 
  70:Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  72:Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Src/stm32f4xx_it.c **** /**
  74:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32f4xx_it.c ****   */
  76:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  77:Src/stm32f4xx_it.c **** {
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 3


  80:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32f4xx_it.c ****   HAL_RCC_NMI_IRQHandler();
  37              		.loc 1 81 0
  38 0002 FFF7FEFF 		bl	HAL_RCC_NMI_IRQHandler
  39              	.LVL0:
  82:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Src/stm32f4xx_it.c **** 
  84:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Src/stm32f4xx_it.c **** }
  40              		.loc 1 85 0
  41 0006 08BD     		pop	{r3, pc}
  42              		.cfi_endproc
  43              	.LFE130:
  45              		.section	.text.HardFault_Handler,"ax",%progbits
  46              		.align	1
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	HardFault_Handler:
  54              	.LFB131:
  86:Src/stm32f4xx_it.c **** 
  87:Src/stm32f4xx_it.c **** /**
  88:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Src/stm32f4xx_it.c ****   */
  90:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:Src/stm32f4xx_it.c **** {
  55              		.loc 1 91 0
  56              		.cfi_startproc
  57              		@ Volatile: function does not return.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.L4:
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE131:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	MemManage_Handler:
  75              	.LFB132:
  92:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Src/stm32f4xx_it.c ****   while (1)
  96:Src/stm32f4xx_it.c ****   {
  97:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Src/stm32f4xx_it.c ****   }
 100:Src/stm32f4xx_it.c **** }
 101:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 4


 102:Src/stm32f4xx_it.c **** /**
 103:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Src/stm32f4xx_it.c ****   */
 105:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:Src/stm32f4xx_it.c **** {
  76              		.loc 1 106 0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB133:
 107:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c **** 
 109:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Src/stm32f4xx_it.c ****   while (1)
 111:Src/stm32f4xx_it.c ****   {
 112:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Src/stm32f4xx_it.c ****   }
 115:Src/stm32f4xx_it.c **** }
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c **** /**
 118:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 119:Src/stm32f4xx_it.c ****   */
 120:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:Src/stm32f4xx_it.c **** {
  97              		.loc 1 121 0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 104 0000 FEE7     		b	.L8
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	UsageFault_Handler:
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 5


 117              	.LFB134:
 122:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c **** 
 124:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Src/stm32f4xx_it.c ****   while (1)
 126:Src/stm32f4xx_it.c ****   {
 127:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Src/stm32f4xx_it.c ****   }
 130:Src/stm32f4xx_it.c **** }
 131:Src/stm32f4xx_it.c **** 
 132:Src/stm32f4xx_it.c **** /**
 133:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Src/stm32f4xx_it.c ****   */
 135:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:Src/stm32f4xx_it.c **** {
 118              		.loc 1 136 0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L10:
 125 0000 FEE7     		b	.L10
 126              		.cfi_endproc
 127              	.LFE134:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	SVC_Handler:
 138              	.LFB135:
 137:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Src/stm32f4xx_it.c ****   while (1)
 141:Src/stm32f4xx_it.c ****   {
 142:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Src/stm32f4xx_it.c ****   }
 145:Src/stm32f4xx_it.c **** }
 146:Src/stm32f4xx_it.c **** 
 147:Src/stm32f4xx_it.c **** /**
 148:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 149:Src/stm32f4xx_it.c ****   */
 150:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 151:Src/stm32f4xx_it.c **** {
 139              		.loc 1 151 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 152:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 6


 154:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Src/stm32f4xx_it.c **** }
 144              		.loc 1 158 0
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE135:
 149              		.section	.text.DebugMon_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	DebugMon_Handler
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv4-sp-d16
 157              	DebugMon_Handler:
 158              	.LFB136:
 159:Src/stm32f4xx_it.c **** 
 160:Src/stm32f4xx_it.c **** /**
 161:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Src/stm32f4xx_it.c ****   */
 163:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 164:Src/stm32f4xx_it.c **** {
 159              		.loc 1 164 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 165:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Src/stm32f4xx_it.c **** }
 164              		.loc 1 171 0
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE136:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	PendSV_Handler:
 178              	.LFB137:
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c **** /**
 174:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:Src/stm32f4xx_it.c ****   */
 176:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 177:Src/stm32f4xx_it.c **** {
 179              		.loc 1 177 0
 180              		.cfi_startproc
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 7


 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 178:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Src/stm32f4xx_it.c **** }
 184              		.loc 1 184 0
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE137:
 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	SysTick_Handler:
 198              	.LFB138:
 185:Src/stm32f4xx_it.c **** 
 186:Src/stm32f4xx_it.c **** /**
 187:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 188:Src/stm32f4xx_it.c ****   */
 189:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 190:Src/stm32f4xx_it.c **** {
 199              		.loc 1 190 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 191:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Src/stm32f4xx_it.c **** 
 193:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Src/stm32f4xx_it.c ****   HAL_IncTick();
 208              		.loc 1 194 0
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL1:
 195:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Src/stm32f4xx_it.c **** 
 197:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Src/stm32f4xx_it.c **** }
 211              		.loc 1 198 0
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE138:
 216              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	TIM1_UP_TIM10_IRQHandler
 219              		.syntax unified
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 8


 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	TIM1_UP_TIM10_IRQHandler:
 225              	.LFB139:
 199:Src/stm32f4xx_it.c **** 
 200:Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 202:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 205:Src/stm32f4xx_it.c **** /******************************************************************************/
 206:Src/stm32f4xx_it.c **** 
 207:Src/stm32f4xx_it.c **** /**
 208:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 209:Src/stm32f4xx_it.c ****   */
 210:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 211:Src/stm32f4xx_it.c **** {
 226              		.loc 1 211 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI2:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 212:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 215:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 235              		.loc 1 215 0
 236 0002 0248     		ldr	r0, .L18
 237 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 238              	.LVL2:
 216:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 217:Src/stm32f4xx_it.c **** 
 218:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 219:Src/stm32f4xx_it.c **** }
 239              		.loc 1 219 0
 240 0008 08BD     		pop	{r3, pc}
 241              	.L19:
 242 000a 00BF     		.align	2
 243              	.L18:
 244 000c 00000000 		.word	htim1
 245              		.cfi_endproc
 246              	.LFE139:
 248              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	DMA2_Stream0_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	DMA2_Stream0_IRQHandler:
 257              	.LFB140:
 220:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 9


 221:Src/stm32f4xx_it.c **** /**
 222:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 223:Src/stm32f4xx_it.c ****   */
 224:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 225:Src/stm32f4xx_it.c **** {
 258              		.loc 1 225 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 226:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 227:Src/stm32f4xx_it.c **** 
 228:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 229:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 267              		.loc 1 229 0
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 270              	.LVL3:
 230:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 231:Src/stm32f4xx_it.c ****   
 232:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 233:Src/stm32f4xx_it.c **** }
 271              		.loc 1 233 0
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	hdma_adc1
 277              		.cfi_endproc
 278              	.LFE140:
 280              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 281              		.align	1
 282              		.global	HAL_TIM_PeriodElapsedCallback
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	HAL_TIM_PeriodElapsedCallback:
 289              	.LFB141:
 234:Src/stm32f4xx_it.c **** 
 235:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 1 */
 236:Src/stm32f4xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 237:Src/stm32f4xx_it.c **** {
 290              		.loc 1 237 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              	.LVL4:
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI4:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 10


 238:Src/stm32f4xx_it.c ****   if(htim == &htim1)
 300              		.loc 1 238 0
 301 0002 C34B     		ldr	r3, .L76
 302 0004 8342     		cmp	r3, r0
 303 0006 00D0     		beq	.L71
 304              	.LVL5:
 305              	.L24:
 239:Src/stm32f4xx_it.c ****   {
 240:Src/stm32f4xx_it.c ****     offsetCurrentRead();
 241:Src/stm32f4xx_it.c ****     HALL_ADCSample();
 242:Src/stm32f4xx_it.c ****     hallSwitch();
 243:Src/stm32f4xx_it.c ****     if(stateContr.controlMode == 1) //open loop
 244:Src/stm32f4xx_it.c ****     {
 245:Src/stm32f4xx_it.c ****       stateContr.duty = stateContr.aimDuty;
 246:Src/stm32f4xx_it.c ****     }
 247:Src/stm32f4xx_it.c ****     else if(stateContr.controlMode == 2)
 248:Src/stm32f4xx_it.c ****     {
 249:Src/stm32f4xx_it.c ****       stateContr.speedCount++;
 250:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 251:Src/stm32f4xx_it.c ****       {
 252:Src/stm32f4xx_it.c ****         piSpd.fdb = hallTree.speedRPMF;
 253:Src/stm32f4xx_it.c ****         //PID_CALC(piSpd);
 254:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 255:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 256:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 257:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
 258:Src/stm32f4xx_it.c ****       }
 259:Src/stm32f4xx_it.c ****     }
 260:Src/stm32f4xx_it.c ****     else if(stateContr.controlMode == 3)
 261:Src/stm32f4xx_it.c ****     {
 262:Src/stm32f4xx_it.c ****       stateContr.speedCount++;
 263:Src/stm32f4xx_it.c ****       stateContr.currentCount++;
 264:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 265:Src/stm32f4xx_it.c ****       {
 266:Src/stm32f4xx_it.c ****         piSpd.fdb = hallTree.speedRPMF;
 267:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 269:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 270:Src/stm32f4xx_it.c ****       }   
 271:Src/stm32f4xx_it.c ****       if(stateContr.currentCount > 1)
 272:Src/stm32f4xx_it.c ****       {
 273:Src/stm32f4xx_it.c ****         piICurr.ref = TORQUE;
 274:Src/stm32f4xx_it.c ****         piICurr.fdb = ADCSampPare.busCurr;
 275:Src/stm32f4xx_it.c ****         PID_CALC(piICurr);
 276:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 277:Src/stm32f4xx_it.c ****         stateContr.currentCount = 0;
 278:Src/stm32f4xx_it.c ****       }
 279:Src/stm32f4xx_it.c ****       if(piICurr.outF > piSpd.outF)
 280:Src/stm32f4xx_it.c ****       {
 281:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
 282:Src/stm32f4xx_it.c ****         piICurr.ui = piSpd.ui;
 283:Src/stm32f4xx_it.c ****       }
 284:Src/stm32f4xx_it.c ****       else
 285:Src/stm32f4xx_it.c ****       {
 286:Src/stm32f4xx_it.c ****         stateContr.duty = piICurr.outF;
 287:Src/stm32f4xx_it.c ****         piSpd.ui = piICurr.ui;
 288:Src/stm32f4xx_it.c ****       }
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 11


 289:Src/stm32f4xx_it.c ****     }
 290:Src/stm32f4xx_it.c ****   }
 291:Src/stm32f4xx_it.c **** }
 306              		.loc 1 291 0
 307 0008 08BD     		pop	{r3, pc}
 308              	.LVL6:
 309              	.L71:
 240:Src/stm32f4xx_it.c ****     HALL_ADCSample();
 310              		.loc 1 240 0
 311 000a FFF7FEFF 		bl	offsetCurrentRead
 312              	.LVL7:
 241:Src/stm32f4xx_it.c ****     hallSwitch();
 313              		.loc 1 241 0
 314 000e FFF7FEFF 		bl	HALL_ADCSample
 315              	.LVL8:
 242:Src/stm32f4xx_it.c ****     if(stateContr.controlMode == 1) //open loop
 316              		.loc 1 242 0
 317 0012 FFF7FEFF 		bl	hallSwitch
 318              	.LVL9:
 243:Src/stm32f4xx_it.c ****     {
 319              		.loc 1 243 0
 320 0016 BF4B     		ldr	r3, .L76+4
 321 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 322 001a 012B     		cmp	r3, #1
 323 001c 00F0F480 		beq	.L72
 247:Src/stm32f4xx_it.c ****     {
 324              		.loc 1 247 0
 325 0020 022B     		cmp	r3, #2
 326 0022 00F0F580 		beq	.L73
 260:Src/stm32f4xx_it.c ****     {
 327              		.loc 1 260 0
 328 0026 032B     		cmp	r3, #3
 329 0028 EED1     		bne	.L24
 262:Src/stm32f4xx_it.c ****       stateContr.currentCount++;
 330              		.loc 1 262 0
 331 002a BA49     		ldr	r1, .L76+4
 332 002c 8A89     		ldrh	r2, [r1, #12]
 333 002e 0132     		adds	r2, r2, #1
 334 0030 92B2     		uxth	r2, r2
 335 0032 8A81     		strh	r2, [r1, #12]	@ movhi
 263:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 336              		.loc 1 263 0
 337 0034 CB89     		ldrh	r3, [r1, #14]
 338 0036 0133     		adds	r3, r3, #1
 339 0038 9BB2     		uxth	r3, r3
 340 003a CB81     		strh	r3, [r1, #14]	@ movhi
 264:Src/stm32f4xx_it.c ****       {
 341              		.loc 1 264 0
 342 003c 022A     		cmp	r2, #2
 343 003e 64D9     		bls	.L36
 266:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 344              		.loc 1 266 0
 345 0040 B54A     		ldr	r2, .L76+8
 346 0042 528C     		ldrh	r2, [r2, #34]
 347 0044 07EE102A 		vmov	s14, r2	@ int
 348 0048 F8EE477A 		vcvt.f32.u32	s15, s14
 349 004c B34A     		ldr	r2, .L76+12
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 12


 350 004e C2ED017A 		vstr.32	s15, [r2, #4]
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 351              		.loc 1 267 0
 352 0052 92ED007A 		vldr.32	s14, [r2]
 353 0056 37EE677A 		vsub.f32	s14, s14, s15
 354 005a 82ED027A 		vstr.32	s14, [r2, #8]
 355 005e D2ED037A 		vldr.32	s15, [r2, #12]
 356 0062 27EE277A 		vmul.f32	s14, s14, s15
 357 0066 82ED047A 		vstr.32	s14, [r2, #16]
 358 006a D2ED056A 		vldr.32	s13, [r2, #20]
 359 006e D2ED0C7A 		vldr.32	s15, [r2, #48]
 360 0072 67EE277A 		vmul.f32	s15, s14, s15
 361 0076 76EEA76A 		vadd.f32	s13, s13, s15
 362 007a 92ED085A 		vldr.32	s10, [r2, #32]
 363 007e F4EEC56A 		vcmpe.f32	s13, s10
 364 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 365 0086 01DD     		ble	.L37
 366 0088 F0EE456A 		vmov.f32	s13, s10
 367              	.L37:
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 368              		.loc 1 267 0 is_stmt 0 discriminator 4
 369 008c A34A     		ldr	r2, .L76+12
 370 008e D2ED095A 		vldr.32	s11, [r2, #36]
 371 0092 F4EEE65A 		vcmpe.f32	s11, s13
 372 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 373 009a 01DD     		ble	.L39
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 374              		.loc 1 267 0
 375 009c F0EE656A 		vmov.f32	s13, s11
 376              	.L39:
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 377              		.loc 1 267 0 discriminator 8
 378 00a0 9E4A     		ldr	r2, .L76+12
 379 00a2 C2ED056A 		vstr.32	s13, [r2, #20]
 380 00a6 D2ED0E7A 		vldr.32	s15, [r2, #56]
 381 00aa 92ED0F6A 		vldr.32	s12, [r2, #60]
 382 00ae 37EE466A 		vsub.f32	s12, s14, s12
 383 00b2 67EE867A 		vmul.f32	s15, s15, s12
 384 00b6 C2ED067A 		vstr.32	s15, [r2, #24]
 385 00ba 77EE266A 		vadd.f32	s13, s14, s13
 386 00be 77EEA67A 		vadd.f32	s15, s15, s13
 387 00c2 B4EEE75A 		vcmpe.f32	s10, s15
 388 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 389 00ca 01D5     		bpl	.L41
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 390              		.loc 1 267 0
 391 00cc F0EE457A 		vmov.f32	s15, s10
 392              	.L41:
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 393              		.loc 1 267 0 discriminator 12
 394 00d0 F4EEE75A 		vcmpe.f32	s11, s15
 395 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 396 00d8 01DD     		ble	.L43
 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 397              		.loc 1 267 0
 398 00da F0EE657A 		vmov.f32	s15, s11
 399              	.L43:
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 13


 267:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 400              		.loc 1 267 0 discriminator 16
 401 00de 8F4A     		ldr	r2, .L76+12
 402 00e0 C2ED0A7A 		vstr.32	s15, [r2, #40]
 403 00e4 82ED0F7A 		vstr.32	s14, [r2, #60]
 268:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 404              		.loc 1 268 0 is_stmt 1 discriminator 16
 405 00e8 92ED117A 		vldr.32	s14, [r2, #68]
 406 00ec DFED8C6A 		vldr.32	s13, .L76+16
 407 00f0 27EE267A 		vmul.f32	s14, s14, s13
 408 00f4 DFED8B6A 		vldr.32	s13, .L76+20
 409 00f8 67EEA67A 		vmul.f32	s15, s15, s13
 410 00fc 77EE277A 		vadd.f32	s15, s14, s15
 411 0100 C2ED117A 		vstr.32	s15, [r2, #68]
 269:Src/stm32f4xx_it.c ****       }   
 412              		.loc 1 269 0 discriminator 16
 413 0104 834A     		ldr	r2, .L76+4
 414 0106 0021     		movs	r1, #0
 415 0108 9181     		strh	r1, [r2, #12]	@ movhi
 416              	.L36:
 271:Src/stm32f4xx_it.c ****       {
 417              		.loc 1 271 0
 418 010a 012B     		cmp	r3, #1
 419 010c 65D9     		bls	.L45
 273:Src/stm32f4xx_it.c ****         piICurr.fdb = ADCSampPare.busCurr;
 420              		.loc 1 273 0
 421 010e 864B     		ldr	r3, .L76+24
 422 0110 DFED867A 		vldr.32	s15, .L76+28
 423 0114 C3ED007A 		vstr.32	s15, [r3]
 274:Src/stm32f4xx_it.c ****         PID_CALC(piICurr);
 424              		.loc 1 274 0
 425 0118 854A     		ldr	r2, .L76+32
 426 011a 92ED017A 		vldr.32	s14, [r2, #4]	@ int
 427 011e B8EEC77A 		vcvt.f32.s32	s14, s14
 428 0122 83ED017A 		vstr.32	s14, [r3, #4]
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 429              		.loc 1 275 0
 430 0126 37EEC77A 		vsub.f32	s14, s15, s14
 431 012a 83ED027A 		vstr.32	s14, [r3, #8]
 432 012e D3ED037A 		vldr.32	s15, [r3, #12]
 433 0132 27EE277A 		vmul.f32	s14, s14, s15
 434 0136 83ED047A 		vstr.32	s14, [r3, #16]
 435 013a D3ED056A 		vldr.32	s13, [r3, #20]
 436 013e D3ED0C7A 		vldr.32	s15, [r3, #48]
 437 0142 67EE277A 		vmul.f32	s15, s14, s15
 438 0146 76EEA76A 		vadd.f32	s13, s13, s15
 439 014a D3ED085A 		vldr.32	s11, [r3, #32]
 440 014e F4EEE56A 		vcmpe.f32	s13, s11
 441 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 442 0156 01DD     		ble	.L46
 443 0158 F0EE656A 		vmov.f32	s13, s11
 444              	.L46:
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 445              		.loc 1 275 0 is_stmt 0 discriminator 4
 446 015c 724B     		ldr	r3, .L76+24
 447 015e 93ED096A 		vldr.32	s12, [r3, #36]
 448 0162 B4EEE66A 		vcmpe.f32	s12, s13
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 14


 449 0166 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 450 016a 01DD     		ble	.L48
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 451              		.loc 1 275 0
 452 016c F0EE466A 		vmov.f32	s13, s12
 453              	.L48:
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 454              		.loc 1 275 0 discriminator 8
 455 0170 6D4B     		ldr	r3, .L76+24
 456 0172 C3ED056A 		vstr.32	s13, [r3, #20]
 457 0176 D3ED0E7A 		vldr.32	s15, [r3, #56]
 458 017a 93ED0F5A 		vldr.32	s10, [r3, #60]
 459 017e 37EE455A 		vsub.f32	s10, s14, s10
 460 0182 67EE857A 		vmul.f32	s15, s15, s10
 461 0186 C3ED067A 		vstr.32	s15, [r3, #24]
 462 018a 77EE266A 		vadd.f32	s13, s14, s13
 463 018e 77EEA67A 		vadd.f32	s15, s15, s13
 464 0192 F4EEE75A 		vcmpe.f32	s11, s15
 465 0196 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 466 019a 01D5     		bpl	.L50
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 467              		.loc 1 275 0
 468 019c F0EE657A 		vmov.f32	s15, s11
 469              	.L50:
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 470              		.loc 1 275 0 discriminator 12
 471 01a0 B4EEE76A 		vcmpe.f32	s12, s15
 472 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 473 01a8 01DD     		ble	.L52
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 474              		.loc 1 275 0
 475 01aa F0EE467A 		vmov.f32	s15, s12
 476              	.L52:
 275:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 477              		.loc 1 275 0 discriminator 16
 478 01ae 5E4B     		ldr	r3, .L76+24
 479 01b0 C3ED0A7A 		vstr.32	s15, [r3, #40]
 480 01b4 83ED0F7A 		vstr.32	s14, [r3, #60]
 276:Src/stm32f4xx_it.c ****         stateContr.currentCount = 0;
 481              		.loc 1 276 0 is_stmt 1 discriminator 16
 482 01b8 93ED117A 		vldr.32	s14, [r3, #68]
 483 01bc DFED586A 		vldr.32	s13, .L76+16
 484 01c0 27EE267A 		vmul.f32	s14, s14, s13
 485 01c4 DFED576A 		vldr.32	s13, .L76+20
 486 01c8 67EEA67A 		vmul.f32	s15, s15, s13
 487 01cc 77EE277A 		vadd.f32	s15, s14, s15
 488 01d0 C3ED117A 		vstr.32	s15, [r3, #68]
 277:Src/stm32f4xx_it.c ****       }
 489              		.loc 1 277 0 discriminator 16
 490 01d4 4F4B     		ldr	r3, .L76+4
 491 01d6 0022     		movs	r2, #0
 492 01d8 DA81     		strh	r2, [r3, #14]	@ movhi
 493              	.L45:
 279:Src/stm32f4xx_it.c ****       {
 494              		.loc 1 279 0
 495 01da 534B     		ldr	r3, .L76+24
 496 01dc D3ED117A 		vldr.32	s15, [r3, #68]
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 15


 497 01e0 4E4B     		ldr	r3, .L76+12
 498 01e2 93ED117A 		vldr.32	s14, [r3, #68]
 499 01e6 F4EEC77A 		vcmpe.f32	s15, s14
 500 01ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 501 01ee 00F38380 		bgt	.L74
 286:Src/stm32f4xx_it.c ****         piSpd.ui = piICurr.ui;
 502              		.loc 1 286 0
 503 01f2 FCEEE77A 		vcvt.u32.f32	s15, s15
 504 01f6 474B     		ldr	r3, .L76+4
 505 01f8 17EE902A 		vmov	r2, s15	@ int
 506 01fc 5A81     		strh	r2, [r3, #10]	@ movhi
 287:Src/stm32f4xx_it.c ****       }
 507              		.loc 1 287 0
 508 01fe 4A4B     		ldr	r3, .L76+24
 509 0200 5A69     		ldr	r2, [r3, #20]	@ float
 510 0202 464B     		ldr	r3, .L76+12
 511 0204 5A61     		str	r2, [r3, #20]	@ float
 512              		.loc 1 291 0
 513 0206 FFE6     		b	.L24
 514              	.L72:
 245:Src/stm32f4xx_it.c ****     }
 515              		.loc 1 245 0
 516 0208 424B     		ldr	r3, .L76+4
 517 020a 5A69     		ldr	r2, [r3, #20]
 518 020c 5A81     		strh	r2, [r3, #10]	@ movhi
 519 020e FBE6     		b	.L24
 520              	.L73:
 249:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 521              		.loc 1 249 0
 522 0210 404A     		ldr	r2, .L76+4
 523 0212 9389     		ldrh	r3, [r2, #12]
 524 0214 0133     		adds	r3, r3, #1
 525 0216 9BB2     		uxth	r3, r3
 526 0218 9381     		strh	r3, [r2, #12]	@ movhi
 250:Src/stm32f4xx_it.c ****       {
 527              		.loc 1 250 0
 528 021a 022B     		cmp	r3, #2
 529 021c 7FF6F4AE 		bls	.L24
 252:Src/stm32f4xx_it.c ****         //PID_CALC(piSpd);
 530              		.loc 1 252 0
 531 0220 3D4B     		ldr	r3, .L76+8
 532 0222 5B8C     		ldrh	r3, [r3, #34]
 533 0224 07EE103A 		vmov	s14, r3	@ int
 534 0228 F8EE477A 		vcvt.f32.u32	s15, s14
 535 022c 3B4B     		ldr	r3, .L76+12
 536 022e C3ED017A 		vstr.32	s15, [r3, #4]
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 537              		.loc 1 254 0
 538 0232 93ED007A 		vldr.32	s14, [r3]
 539 0236 37EE677A 		vsub.f32	s14, s14, s15
 540 023a 83ED027A 		vstr.32	s14, [r3, #8]
 541 023e D3ED037A 		vldr.32	s15, [r3, #12]
 542 0242 27EE277A 		vmul.f32	s14, s14, s15
 543 0246 83ED047A 		vstr.32	s14, [r3, #16]
 544 024a D3ED056A 		vldr.32	s13, [r3, #20]
 545 024e D3ED0C7A 		vldr.32	s15, [r3, #48]
 546 0252 67EE277A 		vmul.f32	s15, s14, s15
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 16


 547 0256 76EEA76A 		vadd.f32	s13, s13, s15
 548 025a D3ED085A 		vldr.32	s11, [r3, #32]
 549 025e F4EEE56A 		vcmpe.f32	s13, s11
 550 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 551 0266 01DD     		ble	.L28
 552 0268 F0EE656A 		vmov.f32	s13, s11
 553              	.L28:
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 554              		.loc 1 254 0 is_stmt 0 discriminator 4
 555 026c 2B4B     		ldr	r3, .L76+12
 556 026e 93ED095A 		vldr.32	s10, [r3, #36]
 557 0272 B4EEE65A 		vcmpe.f32	s10, s13
 558 0276 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 559 027a 01DD     		ble	.L30
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 560              		.loc 1 254 0
 561 027c F0EE456A 		vmov.f32	s13, s10
 562              	.L30:
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 563              		.loc 1 254 0 discriminator 8
 564 0280 264B     		ldr	r3, .L76+12
 565 0282 C3ED056A 		vstr.32	s13, [r3, #20]
 566 0286 D3ED0E7A 		vldr.32	s15, [r3, #56]
 567 028a 93ED0F6A 		vldr.32	s12, [r3, #60]
 568 028e 37EE466A 		vsub.f32	s12, s14, s12
 569 0292 67EE867A 		vmul.f32	s15, s15, s12
 570 0296 C3ED067A 		vstr.32	s15, [r3, #24]
 571 029a 77EE266A 		vadd.f32	s13, s14, s13
 572 029e 77EEA67A 		vadd.f32	s15, s15, s13
 573 02a2 F4EEE75A 		vcmpe.f32	s11, s15
 574 02a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 575 02aa 01D5     		bpl	.L32
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 576              		.loc 1 254 0
 577 02ac F0EE657A 		vmov.f32	s15, s11
 578              	.L32:
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 579              		.loc 1 254 0 discriminator 12
 580 02b0 B4EEE75A 		vcmpe.f32	s10, s15
 581 02b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 582 02b8 1BDC     		bgt	.L75
 583              	.L34:
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 584              		.loc 1 254 0 discriminator 16
 585 02ba 184B     		ldr	r3, .L76+12
 586 02bc C3ED0A7A 		vstr.32	s15, [r3, #40]
 587 02c0 83ED0F7A 		vstr.32	s14, [r3, #60]
 255:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 588              		.loc 1 255 0 is_stmt 1 discriminator 16
 589 02c4 93ED117A 		vldr.32	s14, [r3, #68]
 590 02c8 DFED156A 		vldr.32	s13, .L76+16
 591 02cc 27EE267A 		vmul.f32	s14, s14, s13
 592 02d0 DFED146A 		vldr.32	s13, .L76+20
 593 02d4 67EEA67A 		vmul.f32	s15, s15, s13
 594 02d8 77EE277A 		vadd.f32	s15, s14, s15
 595 02dc C3ED117A 		vstr.32	s15, [r3, #68]
 256:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 17


 596              		.loc 1 256 0 discriminator 16
 597 02e0 0C4B     		ldr	r3, .L76+4
 598 02e2 0022     		movs	r2, #0
 599 02e4 9A81     		strh	r2, [r3, #12]	@ movhi
 257:Src/stm32f4xx_it.c ****       }
 600              		.loc 1 257 0 discriminator 16
 601 02e6 FCEEE77A 		vcvt.u32.f32	s15, s15
 602 02ea 17EE902A 		vmov	r2, s15	@ int
 603 02ee 5A81     		strh	r2, [r3, #10]	@ movhi
 604 02f0 8AE6     		b	.L24
 605              	.L75:
 254:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 606              		.loc 1 254 0
 607 02f2 F0EE457A 		vmov.f32	s15, s10
 608 02f6 E0E7     		b	.L34
 609              	.L74:
 281:Src/stm32f4xx_it.c ****         piICurr.ui = piSpd.ui;
 610              		.loc 1 281 0
 611 02f8 BCEEC77A 		vcvt.u32.f32	s14, s14
 612 02fc 054B     		ldr	r3, .L76+4
 613 02fe 17EE102A 		vmov	r2, s14	@ int
 614 0302 5A81     		strh	r2, [r3, #10]	@ movhi
 282:Src/stm32f4xx_it.c ****       }
 615              		.loc 1 282 0
 616 0304 054B     		ldr	r3, .L76+12
 617 0306 5A69     		ldr	r2, [r3, #20]	@ float
 618 0308 074B     		ldr	r3, .L76+24
 619 030a 5A61     		str	r2, [r3, #20]	@ float
 620 030c 7CE6     		b	.L24
 621              	.L77:
 622 030e 00BF     		.align	2
 623              	.L76:
 624 0310 00000000 		.word	htim1
 625 0314 00000000 		.word	stateContr
 626 0318 00000000 		.word	hallTree
 627 031c 00000000 		.word	piSpd
 628 0320 BD8C6A3F 		.word	1063947453
 629 0324 179AAB3D 		.word	1034656279
 630 0328 00000000 		.word	piICurr
 631 032c 00007F43 		.word	1132396544
 632 0330 00000000 		.word	ADCSampPare
 633              		.cfi_endproc
 634              	.LFE141:
 636              		.text
 637              	.Letext0:
 638              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 639              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 640              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 641              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 642              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 643              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 644              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 645              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 646              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 647              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 648              		.file 12 "Inc/tim.h"
 649              		.file 13 "Inc/adc.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 18


 650              		.file 14 "Inc/bldc.h"
 651              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 652              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:18     .text.NMI_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:46     .text.HardFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:53     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:74     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:109    .text.UsageFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:116    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:130    .text.SVC_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:137    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:150    .text.DebugMon_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:157    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:170    .text.PendSV_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:177    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:190    .text.SysTick_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:217    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:224    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:244    .text.TIM1_UP_TIM10_IRQHandler:0000000c $d
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:249    .text.DMA2_Stream0_IRQHandler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:256    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:276    .text.DMA2_Stream0_IRQHandler:0000000c $d
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:281    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:288    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Cairne\AppData\Local\Temp\cccxSsE6.s:624    .text.HAL_TIM_PeriodElapsedCallback:00000310 $d

UNDEFINED SYMBOLS
HAL_RCC_NMI_IRQHandler
HAL_IncTick
HAL_TIM_IRQHandler
htim1
HAL_DMA_IRQHandler
hdma_adc1
offsetCurrentRead
HALL_ADCSample
hallSwitch
stateContr
hallTree
piSpd
piICurr
ADCSampPare
